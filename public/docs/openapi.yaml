openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/v1/customers:
    get:
      summary: 'Display a listing of customers.'
      operationId: displayAListingOfCustomers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer management'
      security: []
    post:
      summary: 'Store a newly created customer in storage.'
      operationId: storeANewlyCreatedCustomerInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: excepturi
                type:
                  type: string
                  description: ''
                  example: Individual
                  enum:
                    - Individual
                    - individual
                    - Business
                    - business
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: lacey.boyle@example.com
                address:
                  type: string
                  description: ''
                  example: provident
                city:
                  type: string
                  description: ''
                  example: dolor
                state:
                  type: string
                  description: ''
                  example: id
                postalCode:
                  type: string
                  description: ''
                  example: animi
              required:
                - name
                - type
                - email
                - address
                - city
                - state
                - postalCode
      security: []
  '/api/v1/customers/{customer_id}':
    get:
      summary: 'Display the specified customer.'
      operationId: displayTheSpecifiedCustomer
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer management'
      security: []
    put:
      summary: 'Update the specified customer in storage.'
      operationId: updateTheSpecifiedCustomerInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: numquam
                type:
                  type: string
                  description: ''
                  example: business
                  enum:
                    - Individual
                    - individual
                    - Business
                    - business
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: alexandria28@example.org
                address:
                  type: string
                  description: ''
                  example: unde
                city:
                  type: string
                  description: ''
                  example: dignissimos
                state:
                  type: string
                  description: ''
                  example: quia
                postalCode:
                  type: string
                  description: ''
                  example: minus
              required:
                - name
                - type
                - email
                - address
                - city
                - state
                - postalCode
      security: []
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/invoices:
    get:
      summary: 'Display a listing of the invoices.'
      operationId: displayAListingOfTheInvoices
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Invoice management'
      security: []
  '/api/v1/invoices/{invoice_id}':
    get:
      summary: 'Display the specified invoice.'
      operationId: displayTheSpecifiedInvoice
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Invoice management'
      security: []
    parameters:
      -
        in: path
        name: invoice_id
        description: 'The ID of the invoice.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/invoices/bulk:
    post:
      summary: 'Store a bulk created invoice in storage.'
      operationId: storeABulkCreatedInvoiceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Invoice management'
      security: []
tags:
  -
    name: 'Customer management'
    description: "\nAPIs for managing customers"
  -
    name: Endpoints
    description: ''
  -
    name: 'Invoice management'
    description: "\nAPIs for managing invoices"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
